name: 'cd'
on:
  workflow_run:
    workflows: ["ci"]
    branches: [main]
    types:
      - completed

jobs:
  aws-lambda:
    name: AWS lambda
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: checkout source code
        uses: actions/checkout@v3
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: '^1.18'
          cache: true
      - name: Build binaries
        run: make aws_build
      - name: Deploy follow
        uses: appleboy/lambda-action@v0.1.9
        with:
          aws_access_key_id: ${{ secrets.AWS_LAMBDA_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_LAMBDA_SECRET_ACCESS_KEY }}
          aws_region: ${{ secrets.AWS_REGION }}
          function_name: uala-challenge-follow
          zip_file: aws_lambda/uala-challenge-follow.zip
      - name: Deploy tweet
        uses: appleboy/lambda-action@v0.1.9
        with:
          aws_access_key_id: ${{ secrets.AWS_LAMBDA_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_LAMBDA_SECRET_ACCESS_KEY }}
          aws_region: ${{ secrets.AWS_REGION }}
          function_name: uala-challenge-tweet
          zip_file: aws_lambda/uala-challenge-tweet.zip
      - name: Deploy timeline
        uses: appleboy/lambda-action@v0.1.9
        with:
          aws_access_key_id: ${{ secrets.AWS_LAMBDA_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_LAMBDA_SECRET_ACCESS_KEY }}
          aws_region: ${{ secrets.AWS_REGION }}
          function_name: uala-challenge-timeline
          zip_file: aws_lambda/uala-challenge-timeline.zip